- <Befehl> -help / --h / --help     oder     man <Befehl>     oder     info <Befehl>
- Redirection des Output-Streams in Dateien > output (ueberschreibt bestehende Dateien), >> (haengt Input an bestehende Dateien an)
- Redirection des Standard Errors in Dateien mit 2>, z.B. ls /ffffffffffff > file 2> error_file
- Lesen aus Dateien < input
- leere Datei: /dev/null
- mehrere Kommandos in einer Zeile mit ; trennen
- Wildcards: * - beliebige Zeichen; ? - genau ein beliebiges Zeichen; [Zeichenmenge] - beliebiges Zeichen aus Menge ([Aa], [a-c], [!a-z], ); 
- Zeilenumbruch für lange Befehle mit \ am Zeilenende
- Programmabbruch durch Strg-C
- Standardeingabe abbrechen durch Strg-D
- Kombinieren von mehreren Kommandos mit Pipe | ; cmd1 | cmd2 verbindet Ausgang von cmd1 mit Eingang von cmd2
            - Standard-Output oder -Error können gezielt in die Pipe geschickt werden via "m>&n" (S. 53)
- Command Substituation via cmd1 $(cmd2) --> die Ausgabe von cmd2 dient als Parameter für cmd1

- File Permissions - usr grp rst --> 1st char: file (-), dir (d), link (l), devices: block (b), character (c), pipe (p) and socket (s)
- chmod u +r (user receives reading rights), g +w (group), o -w (other)
- chmod 664 => -rw-r--r-- (6 => 110 | 4 => 100 | 4 => 100)

Befehle:
--                  # most commands do not interpret any input after -- as further options
- cat (= concat)    # Concatenate File(s) to standard output
- chmod             # modify file / dir permissions
- chsh              # change shell (zsh, ksh, ,tcsh, bash)
- cp                # copy source(s) to dest(n)
- 
- cut               # cuts out fields, bytes or chars from file?; needs parameter -f (fields), -b (bytes) or -c (chars); --complement inverts logic
- diff              # print differences between two files
- echo              # print arguments
- file              # print format of a file
- find              # find in a directory a file, alternative: use "locate" after files are indexed
- grep              # search pattern / RegEx in lines
- head              # show first lines of file
- id                # display my user 
- kill              # kill pid quits a process; kill -STOP pid & kill -CONT pid pause and resume a process
- less              # show content pagewise, search next with "/", search previous with "?", search next with "n"
- ln                # create symbolic link with ln -s <target_directory> <link_name>
- man               # call man-page, use man -f "..." to search for an unknown function 
- pssswd            # change Password
- pwd               # print working directory
- ps                # list running processes
- sort              # Write sorted concatenation of all FILE(s) to standard output.
- tail              # show last lines of file
- tar               # pack with tar cvfz archive.tar file(s), unpack with tar xvfz archive.tar | args: create/unpack; verbose; files; zip!
                    # check what's in the tar file before unpacking with tar tvfz archive.tar; preserve permissions with arg "p"
- touch             # a file argument that does not exist is created empty (exception: -c / -h)
- tr                # translates files, e.g. echo Hello | tr a-z A-Z => HELLO (wandelt Klein- in Grossbuchstaben um)
- uniq              # removes duplicate lines

Skripte erstellen
- Start des Skripts immer mit shebang #!, gefolgt von /bin/bash als zuständigem Interpreter des Skripts

cronjobs
- define what you regularly want to run in the crontab file, like
            09 * * * /home/user/bin/spmake
            09                      minute
               *                    hour (multiple values may be separated by comma (e.g. 5, 14)
                 *                  day of month
                   *                month
                     /file          /path/file to run
- crontab file                      # install crontab file
- crontab -l                        # list all cronjobs
- crontab -r                        # remove crontab
- crontab -e                        # edit crontab
- crontabs should be found in /var/spool/cron/crontabs, /etc/crontab or /etc/cron.d
- for further information see crontab(5) manual page (man 5 crontab)
